[32m[2024-09-03 16:01:37] INFO [Recovery] 2024/09/03 - 16:01:37 panic recovered:
runtime error: invalid memory address or nil pointer dereference
C:/Users/Administrator/gomod/pkg/mod/github.com/gin-gonic/gin@v1.9.1/gin.go:620 (0x2cbeb29)
	(*Engine).handleHTTPRequest: c.writermem.WriteHeaderNow()
C:/Users/Administrator/gomod/pkg/mod/github.com/gin-gonic/gin@v1.9.1/gin.go:576 (0x2cbe5fb)
	(*Engine).ServeHTTP: 
C:/Program Files/Go/src/net/http/server.go:3210 (0x1190c16)
	serverHandler.ServeHTTP: }
C:/Program Files/Go/src/net/http/server.go:2092 (0x115efb4)
	(*conn).serve: inFlightResponse = nil
C:/Program Files/Go/src/runtime/asm_amd64.s:1700 (0xc4ece0)
	goexit: CALL	runtimeÂ·goexit1(SB)	// does not return
[0m
[0m[31m[2024-09-03 16:02:02] ERROR Error creating kubernetes client: failed to build kubeconfig: error loading config file "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkpNRTFFYTNkTmVrRXlUV3BSZUU1R2IxaEVWRTB3VFVScmQwMVVRVEpOYWxGNFRrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCUzAxUENtNWhRakY0ZGtKWlYwWk9WbGxSWVZOMFpFSjVZWFJQZFdWUWN6VlRSbXRGY2t0V05uVk9SRXR1UlU1T2JEZHFiVWxqTW5VMmFrMHlMelpVVGpCcFEyNEtLMnBNV0hFMGNHRmhRVlZwU0ZCM2NsVllUMlZEVDNKM1ltdDVhbnBFVUhGUk9VbHpTRVo1VmtGR2JuZ3pXSEZLU0VaU2FtSnVaaTk2ZG5aNlFsaDVUZ3BGVUVaVmRsRjFMM1JJY3pVM2JVZDVhMGQxUm1GYU0wWTFPWGRoYVdKelIwVk9kbVZpV1dGR1NWcFphMll5VkRkUWRWQjFMMnhyTjFFNFZFeEVZbXBVQ25Oek5rZDBTa1EzZEhJNFdERnphVGxMY0hWVlNUaEJja3hGUTJkcFFrNHdaalJPV0VJeU1WcFZWWGxoVjNsd00yOW1LMWhKVFVGYVkyOW5ZbEVyUjI4S05sRlNUWGRGZEhWeVl6aHVVSFYwUTBRM2FDdElNSGM0V2pGbVNVVTJjV0ZaTm5VeFVHMUNSRXRZU0hGTlZuVndTbHAzV0VoRVVIWkdjbGxwY0RWMmRBcHdkSEo0VEVoS0wxWmtUVFpFZG1RdmNXOUZRMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkNiRmh4YUZWaWQybEpZa2RrUlZOalpEaHBjR3h3TW1NNWIyeE5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCUlhGNWVVUTNNMDAwYmxsME4zSkZTa0p0VWdwc1dFMWFkVzFwWldFM2QycHpUV2RZTlZsb1MwVnlUa3Q0YmpKeVpqWXpXVU5oVkVKdmJUUm5Xa2hXZGxKU016bEJkMnBSUjJwMU4yTkVTRVp4YVROd0NqRXhiamhRVUdWbmVFTlZZMWczZEVKbmFuQmhPSFp6VVdKWUsybFJRVFpsTUhaWFRqTTFUalZKVGpGa2RuQjRXWFozVDBKQ2RubElWa1UzVm01eVdtd0tSSE16UTBOdmFITkNXRXRzTUZVMlIwUnRVMmRFYVdsUk9FaDNTazl6TXpNdmRuVmlUbEpJZWpOWGR6SkJXbFZUVEZOUFFXdHlVWFV2V2tnd09VZ3hSd28yWm0xeFRsSmxNVTVPVkcxWEwwcEhVVFppTkd4cWNrUXpiblJtY0ZGT1RXRlFVRmN3WVhoeFVsYzFNSGs0Wms4MVNVbFhRemxDZWl0ellXUTRNVzVUQ2pRck5YQk9kVTFYTmxkcVowZDBWV05JVERBemJGQlljV1JrTms1RlZDdFdSeTlUWTJKVWFIUnBhalY0T1hSUVMwSlFhMGRXS3pSQlZXdHZWbVpwU0VvS1lXUkZQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBzZXJ2ZXI6IGh0dHBzOi8vbGIuY2Fycy5sb2NhbDo2NDQzCiAgbmFtZTogY2x1c3Rlci5sb2NhbApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogY2x1c3Rlci5sb2NhbAogICAgdXNlcjoga3ViZXJuZXRlcy1hZG1pbgogIG5hbWU6IGt1YmVybmV0ZXMtYWRtaW5AY2x1c3Rlci5sb2NhbApjdXJyZW50LWNvbnRleHQ6IGt1YmVybmV0ZXMtYWRtaW5AY2x1c3Rlci5sb2NhbApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGt1YmVybmV0ZXMtYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJKVkVORFFXZHRaMEYzU1VKQlowbEpXalpaTUdodlpFTTFlR04zUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkR1ZFVlVUVUpGUjBFeFZVVUtRWGhOUzJFelZtbGFXRXAxV2xoU2JHTjZRV1ZHZHpCNVRrUkJOVTFFVFhkT2Fra3dUVlJTWVVaM01IbE9WRUUxVFVSTmQwNXFTVEJOVkZaaFRVUlJlQXBHZWtGV1FtZE9Wa0pCYjFSRWJrNDFZek5TYkdKVWNIUlpXRTR3V2xoS2VrMVNhM2RHZDFsRVZsRlJSRVY0UW5Ka1YwcHNZMjAxYkdSSFZucE1WMFpyQ21KWGJIVk5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFYZFhiblkxWVZGcWMwVm5URFF4V0ZJS056ZFFWRFZZYlVkTFNuUlRhMFJ3VG5kMFJubEJSV1kwYjJGVU5tcHNTalk0UmtkblFraFJUV0ZDVHpOeGRUaEdiVUozSzJRd2VUQkNibXc0VWtOaFZncHBWVVo0TDBRNWJIRlRNaTg0TjJoWWMxWlhTbWh5WVM4emEyUnNTV3RPTDBSWllsQkdPVGxCY25CeVJHOXFTVTltU0dKaVlVZDBVVGh0WkN0Q1RIQnRDblVyTHpoTldTdGxUMnAwUVZkSU0wSTJjSE5GUzNGSWFHdEJiVXMyU1hGbmFERTJlbEZpTUV4QmMxQTBZV3gwU2pOVlpuUmpWbVI0VFdKVmRHWm1UM29LVlVKdFFYRnFPR0ZEVVRCbVpqazFZakpHTTBoVE16WkJSSFJtUm5WWmVYcGhNRFY0WjFWWFNqZFJVVGxsWTBKRk5FdEplR05hYmpkelZqVTVaR2RPU1FwV1dqaFFZbTlzUjNNMFlXbHJRVTlMS3pGbk5IQXhla3hvYjNwTFFUTlFhVXQwVWpKV2QwRXZjblppVVhWUVQyWnZlSEJ5YmpBMFVuTlFjVlIxUlRoVUNsbzRZMFZOZDBsRVFWRkJRbTh4V1hkV1JFRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwSmhRWGRGZDFsRVZsSXdiRUpCZDNkRFoxbEpTM2RaUWtKUlZVZ0tRWGRKZDBSQldVUldVakJVUVZGSUwwSkJTWGRCUkVGbVFtZE9Wa2hUVFVWSFJFRlhaMEpSV2xZMmIxWkhPRWxwUjNodVVrVnVTR1pKY1ZwaFpHNVFZUXBLVkVGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCWTA5V09VcGpUMHh3UTNrdlF6VTVlVFowUTBObFdraEJaVUpuTUZoTlIyNXJjREJsQ25ZemRsVnBjMDVWUjNscFJYRkhURVpyUm1WelZXeFpMMnBDYUdsb01EUkpkVTVXYm1rMVFsaEdiazF5T0M5TWRHSlZkRFV6YzJoaEswZEphVk5wTTFjS2EwMTBkV016TDJsc1FrMURWbk55UldKd1NIbFlWak5aVjFoVFYzTnFlVFJOT0VFM09HVnVWRFJ5THpCM2FtbFdhRWRNZEdGdmVsTk1lQzl6YVRsS09BcHhVVGxNTUhGd1JXMWhUbXRHV25ScGVUaE1kMEl5VkUxUk56QmhNbEphTUVvclJEZG1jVlJWTlRSVllWVjFOMmR6VUZsQmMxZGxXRFpGVmtwNGFFUnZDalZZVGtVNU5FZHZORXhVY2tRNVNYUXhXSFF3WTJkSFUwRXdSbEpCYlROb1ZVRk5aV2MxUTFCa1MyMVNjR0pvZWxsWlZtaGFOVEJJTHpjeFpETjBlR2NLU2pkVWNteERjazFOWVRKb1ptRjZjV2c0VERGRlREUk9OeTlyZVVadGRqQklZM0JUSzJ4V2NEWnJLM2RCV0drd1duYzlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmNFRkpRa0ZCUzBOQlVVVkJkMWR1ZGpWaFVXcHpSV2RNTkRGWVVqYzNVRlExV0cxSFMwcDBVMnRFY0U1M2RFWjVRVVZtTkc5aFZEWnFiRW8yQ2poR1IyZENTRkZOWVVKUE0zRjFPRVp0UW5jclpEQjVNRUp1YkRoU1EyRldhVlZHZUM5RU9XeHhVekl2T0Rkb1dITldWMHBvY21Fdk0ydGtiRWxyVGk4S1JGbGlVRVk1T1VGeWNISkViMnBKVDJaSVltSmhSM1JST0cxa0swSk1jRzExS3k4NFRWa3JaVTlxZEVGWFNETkNObkJ6UlV0eFNHaHJRVzFMTmtseFp3cG9NVFo2VVdJd1RFRnpVRFJoYkhSS00xVm1kR05XWkhoTllsVjBabVpQZWxWQ2JVRnhhamhoUTFFd1ptWTVOV0l5UmpOSVV6TTJRVVIwWmtaMVdYbDZDbUV3TlhoblZWZEtOMUZST1dWalFrVTBTMGw0WTFwdU4zTldOVGxrWjA1SlZsbzRVR0p2YkVkek5HRnBhMEZQU3lzeFp6UndNWHBNYUc5NlMwRXpVR2tLUzNSU01sWjNRUzl5ZG1KUmRWQlBabTk0Y0hKdU1EUlNjMUJ4VkhWRk9GUmFPR05GVFhkSlJFRlJRVUpCYjBsQ1FWRkRaMjR6VUVaRFJURkVTbTVKU1FvNU9IRkVRVXB4YlRWblpFOVVZaXRDVnpSdlkydHZabFZTTDBSd1psQk5MMjl4ZGt0VVJqbFNhek5oUTAxSE0wWnVVRGRQVm1oYWFWTlBZbmQzV1RnM0NtOWlaSEExTVc1alNFZEpNak16UjJJeU5tMXVPR1IwYldKMmNHdG9TRWwxZUVaTlRsUnliRXB1TDFFNWFsQlhVRU16WTFGVmFucG5UMDA1Wlc5RFpqa0thMVJsYTA5RFlpdHRZMFJVY0RCV1IzVkNiVVV4Wm5aa01EbGFXa2xOUW10VmNrOWxObmgyZHk5MVNVaFZTbkU1TlhscGMzSldlRk5LVFRndlRYUk1SZ3AxVVVSRGQyUnlaSFJIVDBoVVkzSnNjVFZpUlVWcGJVb3phRE15UVcxdVJrdHRRVWMxWjBKVFJsRTRSVkZQVmpFck5EVkJLM296TkhGb09DOVZSbVI0Q2tSMEx6ZDJRbnA2T0ZKRVdtZFNjbnBoYjNCMlJXa3ZNM1ZuTUhKSE4yUXJRMWwxUVcxVWFXbG9hMWRuVkRsdVdXZHFjVXBxUkdsRmNHMU9WSGtyVVVNS2FHZEpVV0pUYVhoQmIwZENRVTF3YUVjeU9VVnJURGxJZFZWQk9XWXlNRTh3UXpONVJUa3ZSRGN6ZGtvelUzbFdObkZNVUVGclQxUXpSRk5wZDI1R1VBcFZiVzlUZEdWbGQwRXlialZhVHpFMWEzcFZTV3RSZVVaeU5GUXlVVVJ5YVdoMFMzTkRiRFZPUnl0bWExVXdlVmRLWXpnNFdXUnNVM1UyUVdSM1ExSnBDbFJXTjB4QmIxaEdkUzlPVEhoMlNsbDBjVUZsUjBNME1rVlJkRVF5UjBkTlR6bGlUbEYyTkhGU1QwbFlNakkxVERGVlVYaGtNa3RJUVc5SFFrRlFVMjhLZFV4WWFUZENVMXAyUzJsMFptaDBkakp4Ym1sa2NubHBNV2czWm1OdmRscFpObmhMVEZoeGNscEVlRXg0UkZCalN6WnpZazVsVFhWc1dHd3lTMkpyWVFwMWQwOTNjVEpUUkVWdmJrb3dPWEI1U0dkeGIwOUdNV1pzY1dsNFVrSmxTWFU0Wm1Nek1Hc3daMkpwVUZKdVFtbHJjekZRUmxrMFlqRjVUMmd2Y0Rnd0NuQTBWV1JFWWpSMVoxUjFja3d4U0ZGSGJEUnRRbTlsUzBkRVJFNUxRekpYVjFCVVluQmlMekZCYjBkQ1FVcHFVako2VjJGUlVFMTJOV1ZPYzJwT2VEa0tXWGhhVDNoc1RXbFZZVlJaVDJaMVFTdFVNRmgwUlRONlUxVlZNVFJxTlU0NU5UTkNiM3B5WnpOeVRWaGlLemhwTjNSWlRrMW1jVk4xU1dSbGNrRklUQXBNUzFCSk5XTjBkbnB5U3pnMU1tNWtkRFE1Vm5WVk1uZ3JOWGhqTW5OeFpYTkhNekJRYlU1c1psSmxja1ZRTDFCdVdtZHlTVmhrUkhaSWMxWk5SQzgwQ2psUVlYVTJVR1ZyVlRNcmJrcEVkVlphSzFkdGRFMHZhRUZ2UjBGbWRYaFZkbk01Vm1GRE5rWmhRVUo0VkhGNVRtaE9jV1ZtUzJkQ1lYZDZRM05RYURjS1RTOU9ZbVZ4YzFadFp6UTBXVU56VmxsSVVVTldZbEpwUTFKM1lUaDRUMEk1TlRCamJsVXdLMUJqY3psdk4weFhSVkJPUzBsdE5tNXBlVnBFVXlzME9BcGtTMmRMUld0RmVVWjBkMFpVSzBwcWFFTXhSalJ0TldoQmRsSlZWWEZYVUZSdmFGQkRPVEl5V0RRd2ExSkZOSGRxTmpCellpODFaRXBHZDJGUWRWRnFDbXBCZFhwQ2F6QkRaMWxDYzBKTE5UUm1VbU5sVURobU4xUlBVMGhaVDNsaWVUWkROekV3Y0hwVVRUbDRiMjFKYlVkelZtWjZibEV4TmxreloyNVRSWFlLU0RZeVFuRlBkVlZEYWpSWlMwWlpOWGhSU0ZsdlQyTmtSakJUTm5CdWIyNURNV0ZZVlVacVQyTlpXSGRCYm5Gc1JURmphVTFZZEdKcFJrZHlOVmxwTVFvcmRXaDFOWFJNY0VsS2VXMURVV0YyYVd4dllWcE5LMGhYV25GU1RISjRLMHRyVGt0RGVHaDNZakZOUmt4QlowSXpjRVZ4UzFFOVBRb3RMUzB0TFVWT1JDQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg==": open YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkpNRTFFYTNkTmVrRXlUV3BSZUU1R2IxaEVWRTB3VFVScmQwMVVRVEpOYWxGNFRrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCUzAxUENtNWhRakY0ZGtKWlYwWk9WbGxSWVZOMFpFSjVZWFJQZFdWUWN6VlRSbXRGY2t0V05uVk9SRXR1UlU1T2JEZHFiVWxqTW5VMmFrMHlMelpVVGpCcFEyNEtLMnBNV0hFMGNHRmhRVlZwU0ZCM2NsVllUMlZEVDNKM1ltdDVhbnBFVUhGUk9VbHpTRVo1VmtGR2JuZ3pXSEZLU0VaU2FtSnVaaTk2ZG5aNlFsaDVUZ3BGVUVaVmRsRjFMM1JJY3pVM2JVZDVhMGQxUm1GYU0wWTFPWGRoYVdKelIwVk9kbVZpV1dGR1NWcFphMll5VkRkUWRWQjFMMnhyTjFFNFZFeEVZbXBVQ25Oek5rZDBTa1EzZEhJNFdERnphVGxMY0hWVlNUaEJja3hGUTJkcFFrNHdaalJPV0VJeU1WcFZWWGxoVjNsd00yOW1LMWhKVFVGYVkyOW5ZbEVyUjI4S05sRlNUWGRGZEhWeVl6aHVVSFYwUTBRM2FDdElNSGM0V2pGbVNVVTJjV0ZaTm5VeFVHMUNSRXRZU0hGTlZuVndTbHAzV0VoRVVIWkdjbGxwY0RWMmRBcHdkSEo0VEVoS0wxWmtUVFpFZG1RdmNXOUZRMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkNiRmh4YUZWaWQybEpZa2RrUlZOalpEaHBjR3h3TW1NNWIyeE5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCUlhGNWVVUTNNMDAwYmxsME4zSkZTa0p0VWdwc1dFMWFkVzFwWldFM2QycHpUV2RZTlZsb1MwVnlUa3Q0YmpKeVpqWXpXVU5oVkVKdmJUUm5Xa2hXZGxKU016bEJkMnBSUjJwMU4yTkVTRVp4YVROd0NqRXhiamhRVUdWbmVFTlZZMWczZEVKbmFuQmhPSFp6VVdKWUsybFJRVFpsTUhaWFRqTTFUalZKVGpGa2RuQjRXWFozVDBKQ2RubElWa1UzVm01eVdtd0tSSE16UTBOdmFITkNXRXRzTUZVMlIwUnRVMmRFYVdsUk9FaDNTazl6TXpNdmRuVmlUbEpJZWpOWGR6SkJXbFZUVEZOUFFXdHlVWFV2V2tnd09VZ3hSd28yWm0xeFRsSmxNVTVPVkcxWEwwcEhVVFppTkd4cWNrUXpiblJtY0ZGT1RXRlFVRmN3WVhoeFVsYzFNSGs0Wms4MVNVbFhRemxDZWl0ellXUTRNVzVUQ2pRck5YQk9kVTFYTmxkcVowZDBWV05JVERBemJGQlljV1JrTms1RlZDdFdSeTlUWTJKVWFIUnBhalY0T1hSUVMwSlFhMGRXS3pSQlZXdHZWbVpwU0VvS1lXUkZQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBzZXJ2ZXI6IGh0dHBzOi8vbGIuY2Fycy5sb2NhbDo2NDQzCiAgbmFtZTogY2x1c3Rlci5sb2NhbApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogY2x1c3Rlci5sb2NhbAogICAgdXNlcjoga3ViZXJuZXRlcy1hZG1pbgogIG5hbWU6IGt1YmVybmV0ZXMtYWRtaW5AY2x1c3Rlci5sb2NhbApjdXJyZW50LWNvbnRleHQ6IGt1YmVybmV0ZXMtYWRtaW5AY2x1c3Rlci5sb2NhbApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGt1YmVybmV0ZXMtYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJKVkVORFFXZHRaMEYzU1VKQlowbEpXalpaTUdodlpFTTFlR04zUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkR1ZFVlVUVUpGUjBFeFZVVUtRWGhOUzJFelZtbGFXRXAxV2xoU2JHTjZRV1ZHZHpCNVRrUkJOVTFFVFhkT2Fra3dUVlJTWVVaM01IbE9WRUUxVFVSTmQwNXFTVEJOVkZaaFRVUlJlQXBHZWtGV1FtZE9Wa0pCYjFSRWJrNDFZek5TYkdKVWNIUlpXRTR3V2xoS2VrMVNhM2RHZDFsRVZsRlJSRVY0UW5Ka1YwcHNZMjAxYkdSSFZucE1WMFpyQ21KWGJIVk5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFYZFhiblkxWVZGcWMwVm5URFF4V0ZJS056ZFFWRFZZYlVkTFNuUlRhMFJ3VG5kMFJubEJSV1kwYjJGVU5tcHNTalk0UmtkblFraFJUV0ZDVHpOeGRUaEdiVUozSzJRd2VUQkNibXc0VWtOaFZncHBWVVo0TDBRNWJIRlRNaTg0TjJoWWMxWlhTbWh5WVM4emEyUnNTV3RPTDBSWllsQkdPVGxCY25CeVJHOXFTVTltU0dKaVlVZDBVVGh0WkN0Q1RIQnRDblVyTHpoTldTdGxUMnAwUVZkSU0wSTJjSE5GUzNGSWFHdEJiVXMyU1hGbmFERTJlbEZpTUV4QmMxQTBZV3gwU2pOVlpuUmpWbVI0VFdKVmRHWm1UM29LVlVKdFFYRnFPR0ZEVVRCbVpqazFZakpHTTBoVE16WkJSSFJtUm5WWmVYcGhNRFY0WjFWWFNqZFJVVGxsWTBKRk5FdEplR05hYmpkelZqVTVaR2RPU1FwV1dqaFFZbTlzUjNNMFlXbHJRVTlMS3pGbk5IQXhla3hvYjNwTFFUTlFhVXQwVWpKV2QwRXZjblppVVhWUVQyWnZlSEJ5YmpBMFVuTlFjVlIxUlRoVUNsbzRZMFZOZDBsRVFWRkJRbTh4V1hkV1JFRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwSmhRWGRGZDFsRVZsSXdiRUpCZDNkRFoxbEpTM2RaUWtKUlZVZ0tRWGRKZDBSQldVUldVakJVUVZGSUwwSkJTWGRCUkVGbVFtZE9Wa2hUVFVWSFJFRlhaMEpSV2xZMmIxWkhPRWxwUjNodVVrVnVTR1pKY1ZwaFpHNVFZUXBLVkVGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCWTA5V09VcGpUMHh3UTNrdlF6VTVlVFowUTBObFdraEJaVUpuTUZoTlIyNXJjREJsQ25ZemRsVnBjMDVWUjNscFJYRkhURVpyUm1WelZXeFpMMnBDYUdsb01EUkpkVTVXYm1rMVFsaEdiazF5T0M5TWRHSlZkRFV6YzJoaEswZEphVk5wTTFjS2EwMTBkV016TDJsc1FrMURWbk55UldKd1NIbFlWak5aVjFoVFYzTnFlVFJOT0VFM09HVnVWRFJ5THpCM2FtbFdhRWRNZEdGdmVsTk1lQzl6YVRsS09BcHhVVGxNTUhGd1JXMWhUbXRHV25ScGVUaE1kMEl5VkUxUk56QmhNbEphTUVvclJEZG1jVlJWTlRSVllWVjFOMmR6VUZsQmMxZGxXRFpGVmtwNGFFUnZDalZZVGtVNU5FZHZORXhVY2tRNVNYUXhXSFF3WTJkSFUwRXdSbEpCYlROb1ZVRk5aV2MxUTFCa1MyMVNjR0pvZWxsWlZtaGFOVEJJTHpjeFpETjBlR2NLU2pkVWNteERjazFOWVRKb1ptRjZjV2c0VERGRlREUk9OeTlyZVVadGRqQklZM0JUSzJ4V2NEWnJLM2RCV0drd1duYzlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmNFRkpRa0ZCUzBOQlVVVkJkMWR1ZGpWaFVXcHpSV2RNTkRGWVVqYzNVRlExV0cxSFMwcDBVMnRFY0U1M2RFWjVRVVZtTkc5aFZEWnFiRW8yQ2poR1IyZENTRkZOWVVKUE0zRjFPRVp0UW5jclpEQjVNRUp1YkRoU1EyRldhVlZHZUM5RU9XeHhVekl2T0Rkb1dITldWMHBvY21Fdk0ydGtiRWxyVGk4S1JGbGlVRVk1T1VGeWNISkViMnBKVDJaSVltSmhSM1JST0cxa0swSk1jRzExS3k4NFRWa3JaVTlxZEVGWFNETkNObkJ6UlV0eFNHaHJRVzFMTmtseFp3cG9NVFo2VVdJd1RFRnpVRFJoYkhSS00xVm1kR05XWkhoTllsVjBabVpQZWxWQ2JVRnhhamhoUTFFd1ptWTVOV0l5UmpOSVV6TTJRVVIwWmtaMVdYbDZDbUV3TlhoblZWZEtOMUZST1dWalFrVTBTMGw0WTFwdU4zTldOVGxrWjA1SlZsbzRVR0p2YkVkek5HRnBhMEZQU3lzeFp6UndNWHBNYUc5NlMwRXpVR2tLUzNSU01sWjNRUzl5ZG1KUmRWQlBabTk0Y0hKdU1EUlNjMUJ4VkhWRk9GUmFPR05GVFhkSlJFRlJRVUpCYjBsQ1FWRkRaMjR6VUVaRFJURkVTbTVKU1FvNU9IRkVRVXB4YlRWblpFOVVZaXRDVnpSdlkydHZabFZTTDBSd1psQk5MMjl4ZGt0VVJqbFNhek5oUTAxSE0wWnVVRGRQVm1oYWFWTlBZbmQzV1RnM0NtOWlaSEExTVc1alNFZEpNak16UjJJeU5tMXVPR1IwYldKMmNHdG9TRWwxZUVaTlRsUnliRXB1TDFFNWFsQlhVRU16WTFGVmFucG5UMDA1Wlc5RFpqa0thMVJsYTA5RFlpdHRZMFJVY0RCV1IzVkNiVVV4Wm5aa01EbGFXa2xOUW10VmNrOWxObmgyZHk5MVNVaFZTbkU1TlhscGMzSldlRk5LVFRndlRYUk1SZ3AxVVVSRGQyUnlaSFJIVDBoVVkzSnNjVFZpUlVWcGJVb3phRE15UVcxdVJrdHRRVWMxWjBKVFJsRTRSVkZQVmpFck5EVkJLM296TkhGb09DOVZSbVI0Q2tSMEx6ZDJRbnA2T0ZKRVdtZFNjbnBoYjNCMlJXa3ZNM1ZuTUhKSE4yUXJRMWwxUVcxVWFXbG9hMWRuVkRsdVdXZHFjVXBxUkdsRmNHMU9WSGtyVVVNS2FHZEpVV0pUYVhoQmIwZENRVTF3YUVjeU9VVnJURGxJZFZWQk9XWXlNRTh3UXpONVJUa3ZSRGN6ZGtvelUzbFdObkZNVUVGclQxUXpSRk5wZDI1R1VBcFZiVzlUZEdWbGQwRXlialZhVHpFMWEzcFZTV3RSZVVaeU5GUXlVVVJ5YVdoMFMzTkRiRFZPUnl0bWExVXdlVmRLWXpnNFdXUnNVM1UyUVdSM1ExSnBDbFJXTjB4QmIxaEdkUzlPVEhoMlNsbDBjVUZsUjBNME1rVlJkRVF5UjBkTlR6bGlUbEYyTkhGU1QwbFlNakkxVERGVlVYaGtNa3RJUVc5SFFrRlFVMjhLZFV4WWFUZENVMXAyUzJsMFptaDBkakp4Ym1sa2NubHBNV2czWm1OdmRscFpObmhMVEZoeGNscEVlRXg0UkZCalN6WnpZazVsVFhWc1dHd3lTMkpyWVFwMWQwOTNjVEpUUkVWdmJrb3dPWEI1U0dkeGIwOUdNV1pzY1dsNFVrSmxTWFU0Wm1Nek1Hc3daMkpwVUZKdVFtbHJjekZRUmxrMFlqRjVUMmd2Y0Rnd0NuQTBWV1JFWWpSMVoxUjFja3d4U0ZGSGJEUnRRbTlsUzBkRVJFNUxRekpYVjFCVVluQmlMekZCYjBkQ1FVcHFVako2VjJGUlVFMTJOV1ZPYzJwT2VEa0tXWGhhVDNoc1RXbFZZVlJaVDJaMVFTdFVNRmgwUlRONlUxVlZNVFJxTlU0NU5UTkNiM3B5WnpOeVRWaGlLemhwTjNSWlRrMW1jVk4xU1dSbGNrRklUQXBNUzFCSk5XTjBkbnB5U3pnMU1tNWtkRFE1Vm5WVk1uZ3JOWGhqTW5OeFpYTkhNekJRYlU1c1psSmxja1ZRTDFCdVdtZHlTVmhrUkhaSWMxWk5SQzgwQ2psUVlYVTJVR1ZyVlRNcmJrcEVkVlphSzFkdGRFMHZhRUZ2UjBGbWRYaFZkbk01Vm1GRE5rWmhRVUo0VkhGNVRtaE9jV1ZtUzJkQ1lYZDZRM05RYURjS1RTOU9ZbVZ4YzFadFp6UTBXVU56VmxsSVVVTldZbEpwUTFKM1lUaDRUMEk1TlRCamJsVXdLMUJqY3psdk4weFhSVkJPUzBsdE5tNXBlVnBFVXlzME9BcGtTMmRMUld0RmVVWjBkMFpVSzBwcWFFTXhSalJ0TldoQmRsSlZWWEZYVUZSdmFGQkRPVEl5V0RRd2ExSkZOSGRxTmpCellpODFaRXBHZDJGUWRWRnFDbXBCZFhwQ2F6QkRaMWxDYzBKTE5UUm1VbU5sVURobU4xUlBVMGhaVDNsaWVUWkROekV3Y0hwVVRUbDRiMjFKYlVkelZtWjZibEV4TmxreloyNVRSWFlLU0RZeVFuRlBkVlZEYWpSWlMwWlpOWGhSU0ZsdlQyTmtSakJUTm5CdWIyNURNV0ZZVlVacVQyTlpXSGRCYm5Gc1JURmphVTFZZEdKcFJrZHlOVmxwTVFvcmRXaDFOWFJNY0VsS2VXMURVV0YyYVd4dllWcE5LMGhYV25GU1RISjRLMHRyVGt0RGVHaDNZakZOUmt4QlowSXpjRVZ4UzFFOVBRb3RMUzB0TFVWT1JDQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg==: The filename, directory name, or volume label syntax is incorrect.
[0m[32m[2024-09-03 16:02:06] INFO [Recovery] 2024/09/03 - 16:02:06 panic recovered:
runtime error: invalid memory address or nil pointer dereference
C:/Users/Administrator/gomod/pkg/mod/github.com/gin-gonic/gin@v1.9.1/gin.go:620 (0x2cbeb29)
	(*Engine).handleHTTPRequest: c.writermem.WriteHeaderNow()
C:/Users/Administrator/gomod/pkg/mod/github.com/gin-gonic/gin@v1.9.1/gin.go:576 (0x2cbe5fb)
	(*Engine).ServeHTTP: 
C:/Program Files/Go/src/net/http/server.go:3210 (0x1190c16)
	serverHandler.ServeHTTP: }
C:/Program Files/Go/src/net/http/server.go:2092 (0x115efb4)
	(*conn).serve: inFlightResponse = nil
C:/Program Files/Go/src/runtime/asm_amd64.s:1700 (0xc4ece0)
	goexit: CALL	runtimeÂ·goexit1(SB)	// does not return
[0m
[0m[31m[2024-09-03 16:02:55] ERROR Error creating kubernetes client: failed to build kubeconfig: error loading config file "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkpNRTFFYTNkTmVrRXlUV3BSZUU1R2IxaEVWRTB3VFVScmQwMVVRVEpOYWxGNFRrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCUzAxUENtNWhRakY0ZGtKWlYwWk9WbGxSWVZOMFpFSjVZWFJQZFdWUWN6VlRSbXRGY2t0V05uVk9SRXR1UlU1T2JEZHFiVWxqTW5VMmFrMHlMelpVVGpCcFEyNEtLMnBNV0hFMGNHRmhRVlZwU0ZCM2NsVllUMlZEVDNKM1ltdDVhbnBFVUhGUk9VbHpTRVo1VmtGR2JuZ3pXSEZLU0VaU2FtSnVaaTk2ZG5aNlFsaDVUZ3BGVUVaVmRsRjFMM1JJY3pVM2JVZDVhMGQxUm1GYU0wWTFPWGRoYVdKelIwVk9kbVZpV1dGR1NWcFphMll5VkRkUWRWQjFMMnhyTjFFNFZFeEVZbXBVQ25Oek5rZDBTa1EzZEhJNFdERnphVGxMY0hWVlNUaEJja3hGUTJkcFFrNHdaalJPV0VJeU1WcFZWWGxoVjNsd00yOW1LMWhKVFVGYVkyOW5ZbEVyUjI4S05sRlNUWGRGZEhWeVl6aHVVSFYwUTBRM2FDdElNSGM0V2pGbVNVVTJjV0ZaTm5VeFVHMUNSRXRZU0hGTlZuVndTbHAzV0VoRVVIWkdjbGxwY0RWMmRBcHdkSEo0VEVoS0wxWmtUVFpFZG1RdmNXOUZRMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkNiRmh4YUZWaWQybEpZa2RrUlZOalpEaHBjR3h3TW1NNWIyeE5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCUlhGNWVVUTNNMDAwYmxsME4zSkZTa0p0VWdwc1dFMWFkVzFwWldFM2QycHpUV2RZTlZsb1MwVnlUa3Q0YmpKeVpqWXpXVU5oVkVKdmJUUm5Xa2hXZGxKU016bEJkMnBSUjJwMU4yTkVTRVp4YVROd0NqRXhiamhRVUdWbmVFTlZZMWczZEVKbmFuQmhPSFp6VVdKWUsybFJRVFpsTUhaWFRqTTFUalZKVGpGa2RuQjRXWFozVDBKQ2RubElWa1UzVm01eVdtd0tSSE16UTBOdmFITkNXRXRzTUZVMlIwUnRVMmRFYVdsUk9FaDNTazl6TXpNdmRuVmlUbEpJZWpOWGR6SkJXbFZUVEZOUFFXdHlVWFV2V2tnd09VZ3hSd28yWm0xeFRsSmxNVTVPVkcxWEwwcEhVVFppTkd4cWNrUXpiblJtY0ZGT1RXRlFVRmN3WVhoeFVsYzFNSGs0Wms4MVNVbFhRemxDZWl0ellXUTRNVzVUQ2pRck5YQk9kVTFYTmxkcVowZDBWV05JVERBemJGQlljV1JrTms1RlZDdFdSeTlUWTJKVWFIUnBhalY0T1hSUVMwSlFhMGRXS3pSQlZXdHZWbVpwU0VvS1lXUkZQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBzZXJ2ZXI6IGh0dHBzOi8vbGIuY2Fycy5sb2NhbDo2NDQzCiAgbmFtZTogY2x1c3Rlci5sb2NhbApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogY2x1c3Rlci5sb2NhbAogICAgdXNlcjoga3ViZXJuZXRlcy1hZG1pbgogIG5hbWU6IGt1YmVybmV0ZXMtYWRtaW5AY2x1c3Rlci5sb2NhbApjdXJyZW50LWNvbnRleHQ6IGt1YmVybmV0ZXMtYWRtaW5AY2x1c3Rlci5sb2NhbApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGt1YmVybmV0ZXMtYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJKVkVORFFXZHRaMEYzU1VKQlowbEpXalpaTUdodlpFTTFlR04zUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkR1ZFVlVUVUpGUjBFeFZVVUtRWGhOUzJFelZtbGFXRXAxV2xoU2JHTjZRV1ZHZHpCNVRrUkJOVTFFVFhkT2Fra3dUVlJTWVVaM01IbE9WRUUxVFVSTmQwNXFTVEJOVkZaaFRVUlJlQXBHZWtGV1FtZE9Wa0pCYjFSRWJrNDFZek5TYkdKVWNIUlpXRTR3V2xoS2VrMVNhM2RHZDFsRVZsRlJSRVY0UW5Ka1YwcHNZMjAxYkdSSFZucE1WMFpyQ21KWGJIVk5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFYZFhiblkxWVZGcWMwVm5URFF4V0ZJS056ZFFWRFZZYlVkTFNuUlRhMFJ3VG5kMFJubEJSV1kwYjJGVU5tcHNTalk0UmtkblFraFJUV0ZDVHpOeGRUaEdiVUozSzJRd2VUQkNibXc0VWtOaFZncHBWVVo0TDBRNWJIRlRNaTg0TjJoWWMxWlhTbWh5WVM4emEyUnNTV3RPTDBSWllsQkdPVGxCY25CeVJHOXFTVTltU0dKaVlVZDBVVGh0WkN0Q1RIQnRDblVyTHpoTldTdGxUMnAwUVZkSU0wSTJjSE5GUzNGSWFHdEJiVXMyU1hGbmFERTJlbEZpTUV4QmMxQTBZV3gwU2pOVlpuUmpWbVI0VFdKVmRHWm1UM29LVlVKdFFYRnFPR0ZEVVRCbVpqazFZakpHTTBoVE16WkJSSFJtUm5WWmVYcGhNRFY0WjFWWFNqZFJVVGxsWTBKRk5FdEplR05hYmpkelZqVTVaR2RPU1FwV1dqaFFZbTlzUjNNMFlXbHJRVTlMS3pGbk5IQXhla3hvYjNwTFFUTlFhVXQwVWpKV2QwRXZjblppVVhWUVQyWnZlSEJ5YmpBMFVuTlFjVlIxUlRoVUNsbzRZMFZOZDBsRVFWRkJRbTh4V1hkV1JFRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwSmhRWGRGZDFsRVZsSXdiRUpCZDNkRFoxbEpTM2RaUWtKUlZVZ0tRWGRKZDBSQldVUldVakJVUVZGSUwwSkJTWGRCUkVGbVFtZE9Wa2hUVFVWSFJFRlhaMEpSV2xZMmIxWkhPRWxwUjNodVVrVnVTR1pKY1ZwaFpHNVFZUXBLVkVGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCWTA5V09VcGpUMHh3UTNrdlF6VTVlVFowUTBObFdraEJaVUpuTUZoTlIyNXJjREJsQ25ZemRsVnBjMDVWUjNscFJYRkhURVpyUm1WelZXeFpMMnBDYUdsb01EUkpkVTVXYm1rMVFsaEdiazF5T0M5TWRHSlZkRFV6YzJoaEswZEphVk5wTTFjS2EwMTBkV016TDJsc1FrMURWbk55UldKd1NIbFlWak5aVjFoVFYzTnFlVFJOT0VFM09HVnVWRFJ5THpCM2FtbFdhRWRNZEdGdmVsTk1lQzl6YVRsS09BcHhVVGxNTUhGd1JXMWhUbXRHV25ScGVUaE1kMEl5VkUxUk56QmhNbEphTUVvclJEZG1jVlJWTlRSVllWVjFOMmR6VUZsQmMxZGxXRFpGVmtwNGFFUnZDalZZVGtVNU5FZHZORXhVY2tRNVNYUXhXSFF3WTJkSFUwRXdSbEpCYlROb1ZVRk5aV2MxUTFCa1MyMVNjR0pvZWxsWlZtaGFOVEJJTHpjeFpETjBlR2NLU2pkVWNteERjazFOWVRKb1ptRjZjV2c0VERGRlREUk9OeTlyZVVadGRqQklZM0JUSzJ4V2NEWnJLM2RCV0drd1duYzlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmNFRkpRa0ZCUzBOQlVVVkJkMWR1ZGpWaFVXcHpSV2RNTkRGWVVqYzNVRlExV0cxSFMwcDBVMnRFY0U1M2RFWjVRVVZtTkc5aFZEWnFiRW8yQ2poR1IyZENTRkZOWVVKUE0zRjFPRVp0UW5jclpEQjVNRUp1YkRoU1EyRldhVlZHZUM5RU9XeHhVekl2T0Rkb1dITldWMHBvY21Fdk0ydGtiRWxyVGk4S1JGbGlVRVk1T1VGeWNISkViMnBKVDJaSVltSmhSM1JST0cxa0swSk1jRzExS3k4NFRWa3JaVTlxZEVGWFNETkNObkJ6UlV0eFNHaHJRVzFMTmtseFp3cG9NVFo2VVdJd1RFRnpVRFJoYkhSS00xVm1kR05XWkhoTllsVjBabVpQZWxWQ2JVRnhhamhoUTFFd1ptWTVOV0l5UmpOSVV6TTJRVVIwWmtaMVdYbDZDbUV3TlhoblZWZEtOMUZST1dWalFrVTBTMGw0WTFwdU4zTldOVGxrWjA1SlZsbzRVR0p2YkVkek5HRnBhMEZQU3lzeFp6UndNWHBNYUc5NlMwRXpVR2tLUzNSU01sWjNRUzl5ZG1KUmRWQlBabTk0Y0hKdU1EUlNjMUJ4VkhWRk9GUmFPR05GVFhkSlJFRlJRVUpCYjBsQ1FWRkRaMjR6VUVaRFJURkVTbTVKU1FvNU9IRkVRVXB4YlRWblpFOVVZaXRDVnpSdlkydHZabFZTTDBSd1psQk5MMjl4ZGt0VVJqbFNhek5oUTAxSE0wWnVVRGRQVm1oYWFWTlBZbmQzV1RnM0NtOWlaSEExTVc1alNFZEpNak16UjJJeU5tMXVPR1IwYldKMmNHdG9TRWwxZUVaTlRsUnliRXB1TDFFNWFsQlhVRU16WTFGVmFucG5UMDA1Wlc5RFpqa0thMVJsYTA5RFlpdHRZMFJVY0RCV1IzVkNiVVV4Wm5aa01EbGFXa2xOUW10VmNrOWxObmgyZHk5MVNVaFZTbkU1TlhscGMzSldlRk5LVFRndlRYUk1SZ3AxVVVSRGQyUnlaSFJIVDBoVVkzSnNjVFZpUlVWcGJVb3phRE15UVcxdVJrdHRRVWMxWjBKVFJsRTRSVkZQVmpFck5EVkJLM296TkhGb09DOVZSbVI0Q2tSMEx6ZDJRbnA2T0ZKRVdtZFNjbnBoYjNCMlJXa3ZNM1ZuTUhKSE4yUXJRMWwxUVcxVWFXbG9hMWRuVkRsdVdXZHFjVXBxUkdsRmNHMU9WSGtyVVVNS2FHZEpVV0pUYVhoQmIwZENRVTF3YUVjeU9VVnJURGxJZFZWQk9XWXlNRTh3UXpONVJUa3ZSRGN6ZGtvelUzbFdObkZNVUVGclQxUXpSRk5wZDI1R1VBcFZiVzlUZEdWbGQwRXlialZhVHpFMWEzcFZTV3RSZVVaeU5GUXlVVVJ5YVdoMFMzTkRiRFZPUnl0bWExVXdlVmRLWXpnNFdXUnNVM1UyUVdSM1ExSnBDbFJXTjB4QmIxaEdkUzlPVEhoMlNsbDBjVUZsUjBNME1rVlJkRVF5UjBkTlR6bGlUbEYyTkhGU1QwbFlNakkxVERGVlVYaGtNa3RJUVc5SFFrRlFVMjhLZFV4WWFUZENVMXAyUzJsMFptaDBkakp4Ym1sa2NubHBNV2czWm1OdmRscFpObmhMVEZoeGNscEVlRXg0UkZCalN6WnpZazVsVFhWc1dHd3lTMkpyWVFwMWQwOTNjVEpUUkVWdmJrb3dPWEI1U0dkeGIwOUdNV1pzY1dsNFVrSmxTWFU0Wm1Nek1Hc3daMkpwVUZKdVFtbHJjekZRUmxrMFlqRjVUMmd2Y0Rnd0NuQTBWV1JFWWpSMVoxUjFja3d4U0ZGSGJEUnRRbTlsUzBkRVJFNUxRekpYVjFCVVluQmlMekZCYjBkQ1FVcHFVako2VjJGUlVFMTJOV1ZPYzJwT2VEa0tXWGhhVDNoc1RXbFZZVlJaVDJaMVFTdFVNRmgwUlRONlUxVlZNVFJxTlU0NU5UTkNiM3B5WnpOeVRWaGlLemhwTjNSWlRrMW1jVk4xU1dSbGNrRklUQXBNUzFCSk5XTjBkbnB5U3pnMU1tNWtkRFE1Vm5WVk1uZ3JOWGhqTW5OeFpYTkhNekJRYlU1c1psSmxja1ZRTDFCdVdtZHlTVmhrUkhaSWMxWk5SQzgwQ2psUVlYVTJVR1ZyVlRNcmJrcEVkVlphSzFkdGRFMHZhRUZ2UjBGbWRYaFZkbk01Vm1GRE5rWmhRVUo0VkhGNVRtaE9jV1ZtUzJkQ1lYZDZRM05RYURjS1RTOU9ZbVZ4YzFadFp6UTBXVU56VmxsSVVVTldZbEpwUTFKM1lUaDRUMEk1TlRCamJsVXdLMUJqY3psdk4weFhSVkJPUzBsdE5tNXBlVnBFVXlzME9BcGtTMmRMUld0RmVVWjBkMFpVSzBwcWFFTXhSalJ0TldoQmRsSlZWWEZYVUZSdmFGQkRPVEl5V0RRd2ExSkZOSGRxTmpCellpODFaRXBHZDJGUWRWRnFDbXBCZFhwQ2F6QkRaMWxDYzBKTE5UUm1VbU5sVURobU4xUlBVMGhaVDNsaWVUWkROekV3Y0hwVVRUbDRiMjFKYlVkelZtWjZibEV4TmxreloyNVRSWFlLU0RZeVFuRlBkVlZEYWpSWlMwWlpOWGhSU0ZsdlQyTmtSakJUTm5CdWIyNURNV0ZZVlVacVQyTlpXSGRCYm5Gc1JURmphVTFZZEdKcFJrZHlOVmxwTVFvcmRXaDFOWFJNY0VsS2VXMURVV0YyYVd4dllWcE5LMGhYV25GU1RISjRLMHRyVGt0RGVHaDNZakZOUmt4QlowSXpjRVZ4UzFFOVBRb3RMUzB0TFVWT1JDQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg==": open YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkpNRTFFYTNkTmVrRXlUV3BSZUU1R2IxaEVWRTB3VFVScmQwMVVRVEpOYWxGNFRrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCUzAxUENtNWhRakY0ZGtKWlYwWk9WbGxSWVZOMFpFSjVZWFJQZFdWUWN6VlRSbXRGY2t0V05uVk9SRXR1UlU1T2JEZHFiVWxqTW5VMmFrMHlMelpVVGpCcFEyNEtLMnBNV0hFMGNHRmhRVlZwU0ZCM2NsVllUMlZEVDNKM1ltdDVhbnBFVUhGUk9VbHpTRVo1VmtGR2JuZ3pXSEZLU0VaU2FtSnVaaTk2ZG5aNlFsaDVUZ3BGVUVaVmRsRjFMM1JJY3pVM2JVZDVhMGQxUm1GYU0wWTFPWGRoYVdKelIwVk9kbVZpV1dGR1NWcFphMll5VkRkUWRWQjFMMnhyTjFFNFZFeEVZbXBVQ25Oek5rZDBTa1EzZEhJNFdERnphVGxMY0hWVlNUaEJja3hGUTJkcFFrNHdaalJPV0VJeU1WcFZWWGxoVjNsd00yOW1LMWhKVFVGYVkyOW5ZbEVyUjI4S05sRlNUWGRGZEhWeVl6aHVVSFYwUTBRM2FDdElNSGM0V2pGbVNVVTJjV0ZaTm5VeFVHMUNSRXRZU0hGTlZuVndTbHAzV0VoRVVIWkdjbGxwY0RWMmRBcHdkSEo0VEVoS0wxWmtUVFpFZG1RdmNXOUZRMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkNiRmh4YUZWaWQybEpZa2RrUlZOalpEaHBjR3h3TW1NNWIyeE5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCUlhGNWVVUTNNMDAwYmxsME4zSkZTa0p0VWdwc1dFMWFkVzFwWldFM2QycHpUV2RZTlZsb1MwVnlUa3Q0YmpKeVpqWXpXVU5oVkVKdmJUUm5Xa2hXZGxKU016bEJkMnBSUjJwMU4yTkVTRVp4YVROd0NqRXhiamhRVUdWbmVFTlZZMWczZEVKbmFuQmhPSFp6VVdKWUsybFJRVFpsTUhaWFRqTTFUalZKVGpGa2RuQjRXWFozVDBKQ2RubElWa1UzVm01eVdtd0tSSE16UTBOdmFITkNXRXRzTUZVMlIwUnRVMmRFYVdsUk9FaDNTazl6TXpNdmRuVmlUbEpJZWpOWGR6SkJXbFZUVEZOUFFXdHlVWFV2V2tnd09VZ3hSd28yWm0xeFRsSmxNVTVPVkcxWEwwcEhVVFppTkd4cWNrUXpiblJtY0ZGT1RXRlFVRmN3WVhoeFVsYzFNSGs0Wms4MVNVbFhRemxDZWl0ellXUTRNVzVUQ2pRck5YQk9kVTFYTmxkcVowZDBWV05JVERBemJGQlljV1JrTms1RlZDdFdSeTlUWTJKVWFIUnBhalY0T1hSUVMwSlFhMGRXS3pSQlZXdHZWbVpwU0VvS1lXUkZQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBzZXJ2ZXI6IGh0dHBzOi8vbGIuY2Fycy5sb2NhbDo2NDQzCiAgbmFtZTogY2x1c3Rlci5sb2NhbApjb250ZXh0czoKLSBjb250ZXh0OgogICAgY2x1c3RlcjogY2x1c3Rlci5sb2NhbAogICAgdXNlcjoga3ViZXJuZXRlcy1hZG1pbgogIG5hbWU6IGt1YmVybmV0ZXMtYWRtaW5AY2x1c3Rlci5sb2NhbApjdXJyZW50LWNvbnRleHQ6IGt1YmVybmV0ZXMtYWRtaW5AY2x1c3Rlci5sb2NhbApraW5kOiBDb25maWcKcHJlZmVyZW5jZXM6IHt9CnVzZXJzOgotIG5hbWU6IGt1YmVybmV0ZXMtYWRtaW4KICB1c2VyOgogICAgY2xpZW50LWNlcnRpZmljYXRlLWRhdGE6IExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJKVkVORFFXZHRaMEYzU1VKQlowbEpXalpaTUdodlpFTTFlR04zUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkR1ZFVlVUVUpGUjBFeFZVVUtRWGhOUzJFelZtbGFXRXAxV2xoU2JHTjZRV1ZHZHpCNVRrUkJOVTFFVFhkT2Fra3dUVlJTWVVaM01IbE9WRUUxVFVSTmQwNXFTVEJOVkZaaFRVUlJlQXBHZWtGV1FtZE9Wa0pCYjFSRWJrNDFZek5TYkdKVWNIUlpXRTR3V2xoS2VrMVNhM2RHZDFsRVZsRlJSRVY0UW5Ka1YwcHNZMjAxYkdSSFZucE1WMFpyQ21KWGJIVk5TVWxDU1dwQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSUlVaQlFVOURRVkU0UVUxSlNVSkRaMHREUVZGRlFYZFhiblkxWVZGcWMwVm5URFF4V0ZJS056ZFFWRFZZYlVkTFNuUlRhMFJ3VG5kMFJubEJSV1kwYjJGVU5tcHNTalk0UmtkblFraFJUV0ZDVHpOeGRUaEdiVUozSzJRd2VUQkNibXc0VWtOaFZncHBWVVo0TDBRNWJIRlRNaTg0TjJoWWMxWlhTbWh5WVM4emEyUnNTV3RPTDBSWllsQkdPVGxCY25CeVJHOXFTVTltU0dKaVlVZDBVVGh0WkN0Q1RIQnRDblVyTHpoTldTdGxUMnAwUVZkSU0wSTJjSE5GUzNGSWFHdEJiVXMyU1hGbmFERTJlbEZpTUV4QmMxQTBZV3gwU2pOVlpuUmpWbVI0VFdKVmRHWm1UM29LVlVKdFFYRnFPR0ZEVVRCbVpqazFZakpHTTBoVE16WkJSSFJtUm5WWmVYcGhNRFY0WjFWWFNqZFJVVGxsWTBKRk5FdEplR05hYmpkelZqVTVaR2RPU1FwV1dqaFFZbTlzUjNNMFlXbHJRVTlMS3pGbk5IQXhla3hvYjNwTFFUTlFhVXQwVWpKV2QwRXZjblppVVhWUVQyWnZlSEJ5YmpBMFVuTlFjVlIxUlRoVUNsbzRZMFZOZDBsRVFWRkJRbTh4V1hkV1JFRlBRbWRPVmtoUk9FSkJaamhGUWtGTlEwSmhRWGRGZDFsRVZsSXdiRUpCZDNkRFoxbEpTM2RaUWtKUlZVZ0tRWGRKZDBSQldVUldVakJVUVZGSUwwSkJTWGRCUkVGbVFtZE9Wa2hUVFVWSFJFRlhaMEpSV2xZMmIxWkhPRWxwUjNodVVrVnVTR1pKY1ZwaFpHNVFZUXBLVkVGT1FtZHJjV2hyYVVjNWR6QkNRVkZ6UmtGQlQwTkJVVVZCWTA5V09VcGpUMHh3UTNrdlF6VTVlVFowUTBObFdraEJaVUpuTUZoTlIyNXJjREJsQ25ZemRsVnBjMDVWUjNscFJYRkhURVpyUm1WelZXeFpMMnBDYUdsb01EUkpkVTVXYm1rMVFsaEdiazF5T0M5TWRHSlZkRFV6YzJoaEswZEphVk5wTTFjS2EwMTBkV016TDJsc1FrMURWbk55UldKd1NIbFlWak5aVjFoVFYzTnFlVFJOT0VFM09HVnVWRFJ5THpCM2FtbFdhRWRNZEdGdmVsTk1lQzl6YVRsS09BcHhVVGxNTUhGd1JXMWhUbXRHV25ScGVUaE1kMEl5VkUxUk56QmhNbEphTUVvclJEZG1jVlJWTlRSVllWVjFOMmR6VUZsQmMxZGxXRFpGVmtwNGFFUnZDalZZVGtVNU5FZHZORXhVY2tRNVNYUXhXSFF3WTJkSFUwRXdSbEpCYlROb1ZVRk5aV2MxUTFCa1MyMVNjR0pvZWxsWlZtaGFOVEJJTHpjeFpETjBlR2NLU2pkVWNteERjazFOWVRKb1ptRjZjV2c0VERGRlREUk9OeTlyZVVadGRqQklZM0JUSzJ4V2NEWnJLM2RCV0drd1duYzlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBjbGllbnQta2V5LWRhdGE6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmNFRkpRa0ZCUzBOQlVVVkJkMWR1ZGpWaFVXcHpSV2RNTkRGWVVqYzNVRlExV0cxSFMwcDBVMnRFY0U1M2RFWjVRVVZtTkc5aFZEWnFiRW8yQ2poR1IyZENTRkZOWVVKUE0zRjFPRVp0UW5jclpEQjVNRUp1YkRoU1EyRldhVlZHZUM5RU9XeHhVekl2T0Rkb1dITldWMHBvY21Fdk0ydGtiRWxyVGk4S1JGbGlVRVk1T1VGeWNISkViMnBKVDJaSVltSmhSM1JST0cxa0swSk1jRzExS3k4NFRWa3JaVTlxZEVGWFNETkNObkJ6UlV0eFNHaHJRVzFMTmtseFp3cG9NVFo2VVdJd1RFRnpVRFJoYkhSS00xVm1kR05XWkhoTllsVjBabVpQZWxWQ2JVRnhhamhoUTFFd1ptWTVOV0l5UmpOSVV6TTJRVVIwWmtaMVdYbDZDbUV3TlhoblZWZEtOMUZST1dWalFrVTBTMGw0WTFwdU4zTldOVGxrWjA1SlZsbzRVR0p2YkVkek5HRnBhMEZQU3lzeFp6UndNWHBNYUc5NlMwRXpVR2tLUzNSU01sWjNRUzl5ZG1KUmRWQlBabTk0Y0hKdU1EUlNjMUJ4VkhWRk9GUmFPR05GVFhkSlJFRlJRVUpCYjBsQ1FWRkRaMjR6VUVaRFJURkVTbTVKU1FvNU9IRkVRVXB4YlRWblpFOVVZaXRDVnpSdlkydHZabFZTTDBSd1psQk5MMjl4ZGt0VVJqbFNhek5oUTAxSE0wWnVVRGRQVm1oYWFWTlBZbmQzV1RnM0NtOWlaSEExTVc1alNFZEpNak16UjJJeU5tMXVPR1IwYldKMmNHdG9TRWwxZUVaTlRsUnliRXB1TDFFNWFsQlhVRU16WTFGVmFucG5UMDA1Wlc5RFpqa0thMVJsYTA5RFlpdHRZMFJVY0RCV1IzVkNiVVV4Wm5aa01EbGFXa2xOUW10VmNrOWxObmgyZHk5MVNVaFZTbkU1TlhscGMzSldlRk5LVFRndlRYUk1SZ3AxVVVSRGQyUnlaSFJIVDBoVVkzSnNjVFZpUlVWcGJVb3phRE15UVcxdVJrdHRRVWMxWjBKVFJsRTRSVkZQVmpFck5EVkJLM296TkhGb09DOVZSbVI0Q2tSMEx6ZDJRbnA2T0ZKRVdtZFNjbnBoYjNCMlJXa3ZNM1ZuTUhKSE4yUXJRMWwxUVcxVWFXbG9hMWRuVkRsdVdXZHFjVXBxUkdsRmNHMU9WSGtyVVVNS2FHZEpVV0pUYVhoQmIwZENRVTF3YUVjeU9VVnJURGxJZFZWQk9XWXlNRTh3UXpONVJUa3ZSRGN6ZGtvelUzbFdObkZNVUVGclQxUXpSRk5wZDI1R1VBcFZiVzlUZEdWbGQwRXlialZhVHpFMWEzcFZTV3RSZVVaeU5GUXlVVVJ5YVdoMFMzTkRiRFZPUnl0bWExVXdlVmRLWXpnNFdXUnNVM1UyUVdSM1ExSnBDbFJXTjB4QmIxaEdkUzlPVEhoMlNsbDBjVUZsUjBNME1rVlJkRVF5UjBkTlR6bGlUbEYyTkhGU1QwbFlNakkxVERGVlVYaGtNa3RJUVc5SFFrRlFVMjhLZFV4WWFUZENVMXAyUzJsMFptaDBkakp4Ym1sa2NubHBNV2czWm1OdmRscFpObmhMVEZoeGNscEVlRXg0UkZCalN6WnpZazVsVFhWc1dHd3lTMkpyWVFwMWQwOTNjVEpUUkVWdmJrb3dPWEI1U0dkeGIwOUdNV1pzY1dsNFVrSmxTWFU0Wm1Nek1Hc3daMkpwVUZKdVFtbHJjekZRUmxrMFlqRjVUMmd2Y0Rnd0NuQTBWV1JFWWpSMVoxUjFja3d4U0ZGSGJEUnRRbTlsUzBkRVJFNUxRekpYVjFCVVluQmlMekZCYjBkQ1FVcHFVako2VjJGUlVFMTJOV1ZPYzJwT2VEa0tXWGhhVDNoc1RXbFZZVlJaVDJaMVFTdFVNRmgwUlRONlUxVlZNVFJxTlU0NU5UTkNiM3B5WnpOeVRWaGlLemhwTjNSWlRrMW1jVk4xU1dSbGNrRklUQXBNUzFCSk5XTjBkbnB5U3pnMU1tNWtkRFE1Vm5WVk1uZ3JOWGhqTW5OeFpYTkhNekJRYlU1c1psSmxja1ZRTDFCdVdtZHlTVmhrUkhaSWMxWk5SQzgwQ2psUVlYVTJVR1ZyVlRNcmJrcEVkVlphSzFkdGRFMHZhRUZ2UjBGbWRYaFZkbk01Vm1GRE5rWmhRVUo0VkhGNVRtaE9jV1ZtUzJkQ1lYZDZRM05RYURjS1RTOU9ZbVZ4YzFadFp6UTBXVU56VmxsSVVVTldZbEpwUTFKM1lUaDRUMEk1TlRCamJsVXdLMUJqY3psdk4weFhSVkJPUzBsdE5tNXBlVnBFVXlzME9BcGtTMmRMUld0RmVVWjBkMFpVSzBwcWFFTXhSalJ0TldoQmRsSlZWWEZYVUZSdmFGQkRPVEl5V0RRd2ExSkZOSGRxTmpCellpODFaRXBHZDJGUWRWRnFDbXBCZFhwQ2F6QkRaMWxDYzBKTE5UUm1VbU5sVURobU4xUlBVMGhaVDNsaWVUWkROekV3Y0hwVVRUbDRiMjFKYlVkelZtWjZibEV4TmxreloyNVRSWFlLU0RZeVFuRlBkVlZEYWpSWlMwWlpOWGhSU0ZsdlQyTmtSakJUTm5CdWIyNURNV0ZZVlVacVQyTlpXSGRCYm5Gc1JURmphVTFZZEdKcFJrZHlOVmxwTVFvcmRXaDFOWFJNY0VsS2VXMURVV0YyYVd4dllWcE5LMGhYV25GU1RISjRLMHRyVGt0RGVHaDNZakZOUmt4QlowSXpjRVZ4UzFFOVBRb3RMUzB0TFVWT1JDQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUW89Cg==: The filename, directory name, or volume label syntax is incorrect.
[0m[32m[2024-09-03 16:04:28] INFO [Recovery] 2024/09/03 - 16:04:28 panic recovered:
runtime error: invalid memory address or nil pointer dereference
C:/Users/Administrator/gomod/pkg/mod/github.com/gin-gonic/gin@v1.9.1/gin.go:620 (0x2cbeb29)
	(*Engine).handleHTTPRequest: c.writermem.WriteHeaderNow()
C:/Users/Administrator/gomod/pkg/mod/github.com/gin-gonic/gin@v1.9.1/gin.go:576 (0x2cbe5fb)
	(*Engine).ServeHTTP: 
C:/Program Files/Go/src/net/http/server.go:3210 (0x1190c16)
	serverHandler.ServeHTTP: }
C:/Program Files/Go/src/net/http/server.go:2092 (0x115efb4)
	(*conn).serve: inFlightResponse = nil
C:/Program Files/Go/src/runtime/asm_amd64.s:1700 (0xc4ece0)
	goexit: CALL	runtimeÂ·goexit1(SB)	// does not return
[0m
[0m[31m[2024-09-03 16:05:21] ERROR Error creating kubernetes client: failed to build kubeconfig: error loading config file "YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkpNRTFFYTNkTmVrRXlUV3BSZUU1R2IxaEVWRTB3VFVScmQwMVVRVEpOYWxGNFRrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCUzAxUENtNWhRakY0ZGtKWlYwWk9WbGxSWVZOMFpFSjVZWFJQZFdWUWN6VlRSbXRGY2t0V05uVk9SRXR1UlU1T2JEZHFiVWxqTW5VMmFrMHlMelpVVGpCcFEyNEtLMnBNV0hFMGNHRmhRVlZwU0ZCM2NsVllUMlZEVDNKM1ltdDVhbnBFVUhGUk9VbHpTRVo1VmtGR2JuZ3pXSEZLU0VaU2FtSnVaaTk2ZG5aNlFsaDVUZ3BGVUVaVmRsRjFMM1JJY3pVM2JVZDVhMGQxUm1GYU0wWTFPWGRoYVdKelIwVk9kbVZpV1dGR1NWcFphMll5VkRkUWRWQjFMMnhyTjFFNFZFeEVZbXBVQ25Oek5rZDBTa1EzZEhJNFdERnphVGxMY0hWVlNUaEJja3hGUTJkcFFrNHdaalJPV0VJeU1WcFZWWGxoVjNsd00yOW1LMWhKVFVGYVkyOW5ZbEVyUjI4S05sRlNUWGRGZEhWeVl6aHVVSFYwUTBRM2FDdElNSGM0V2pGbVNVVTJjV0ZaTm5VeFVHMUNSRXRZU0hGTlZuVndTbHAzV0VoRVVIWkdjbGxwY0RWMmRBcHdkSEo0VEVoS0wxWmtUVFpFZG1RdmNXOUZRMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkNiRmh4YUZWaWQybEpZa2RrUlZOalpEaHBjR3h3TW1NNWIyeE5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCUlhGNWVVUTNNMDAwYmxsME4zSkZTa0p0VWdwc1dFMWFkVzFwWldFM2QycHpUV2RZTlZsb1MwVnlUa3Q0YmpKeVpqWXpXVU5oVkVKdmJUUm5Xa2hXZGxKU016bEJkMnBSUjJwMU4yTkVTRVp4YVROd0NqRXhiamhRVUdWbmVFTlZZMWczZEVKbmFuQmhPSFp6VVdKWUsybFJRVFpsTUhaWFRqTTFUalZKVGpGa2RuQjRXWFozVDBKQ2RubElWa1UzVm01eVdtd0tSSE16UTBOdmFITkNXRXRzTUZVMlIwUnRVMmRFYVdsUk9FaDNTazl6TXpNdmRuVmlUbEpJZWpOWGR6SkJXbFZUVEZOUFFXdHlVWFV2V2tnd09VZ3hSd28yWm0xeFRsSmxNVTVPVkcxWEwwcEhVVFppTkd4cWNrUXpiblJtY0ZGT1RXRlFVRmN3WVhoeFVsYzFNSGs0Wms4MVNVbFhRemxDZWl0ellXUTRNVzVUQ2pRck5YQk9kVTFYTmxkcVowZDBWV05JVERBemJGQlljV1JrTms1RlZDdFdSeTlUWTJKVWFIUnBhalY0T1hSUVMwSlFhMGRXS3pSQlZXdHZWbVpwU0VvS1lXUkZQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBzZXJ2ZXI6IGh0dHBzOi8vMTkyLjE2OC4yMjcuMTYxOjY0NDMKICBuYW1lOiBjbHVzdGVyLmxvY2FsCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBjbHVzdGVyLmxvY2FsCiAgICB1c2VyOiBrdWJlcm5ldGVzLWFkbWluCiAgbmFtZToga3ViZXJuZXRlcy1hZG1pbkBjbHVzdGVyLmxvY2FsCmN1cnJlbnQtY29udGV4dDoga3ViZXJuZXRlcy1hZG1pbkBjbHVzdGVyLmxvY2FsCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZXJuZXRlcy1hZG1pbgogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUkpWRU5EUVdkdFowRjNTVUpCWjBsSldqWlpNR2h2WkVNMWVHTjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRHVkVWVVRVSkZSMEV4VlVVS1FYaE5TMkV6Vm1sYVdFcDFXbGhTYkdONlFXVkdkekI1VGtSQk5VMUVUWGRPYWtrd1RWUlNZVVozTUhsT1ZFRTFUVVJOZDA1cVNUQk5WRlpoVFVSUmVBcEdla0ZXUW1kT1ZrSkJiMVJFYms0MVl6TlNiR0pVY0hSWldFNHdXbGhLZWsxU2EzZEdkMWxFVmxGUlJFVjRRbkprVjBwc1kyMDFiR1JIVm5wTVYwWnJDbUpYYkhWTlNVbENTV3BCVGtKbmEzRm9hMmxIT1hjd1FrRlJSVVpCUVU5RFFWRTRRVTFKU1VKRFowdERRVkZGUVhkWGJuWTFZVkZxYzBWblREUXhXRklLTnpkUVZEVlliVWRMU25SVGEwUndUbmQwUm5sQlJXWTBiMkZVTm1wc1NqWTRSa2RuUWtoUlRXRkNUek54ZFRoR2JVSjNLMlF3ZVRCQ2JtdzRVa05oVmdwcFZVWjRMMFE1YkhGVE1pODROMmhZYzFaWFNtaHlZUzh6YTJSc1NXdE9MMFJaWWxCR09UbEJjbkJ5Ukc5cVNVOW1TR0ppWVVkMFVUaHRaQ3RDVEhCdENuVXJMemhOV1N0bFQycDBRVmRJTTBJMmNITkZTM0ZJYUd0QmJVczJTWEZuYURFMmVsRmlNRXhCYzFBMFlXeDBTak5WWm5SalZtUjRUV0pWZEdabVQzb0tWVUp0UVhGcU9HRkRVVEJtWmprMVlqSkdNMGhUTXpaQlJIUm1SblZaZVhwaE1EVjRaMVZYU2pkUlVUbGxZMEpGTkV0SmVHTmFiamR6VmpVNVpHZE9TUXBXV2poUVltOXNSM00wWVdsclFVOUxLekZuTkhBeGVreG9iM3BMUVROUWFVdDBVakpXZDBFdmNuWmlVWFZRVDJadmVIQnliakEwVW5OUWNWUjFSVGhVQ2xvNFkwVk5kMGxFUVZGQlFtOHhXWGRXUkVGUFFtZE9Wa2hST0VKQlpqaEZRa0ZOUTBKaFFYZEZkMWxFVmxJd2JFSkJkM2REWjFsSlMzZFpRa0pSVlVnS1FYZEpkMFJCV1VSV1VqQlVRVkZJTDBKQlNYZEJSRUZtUW1kT1ZraFRUVVZIUkVGWFowSlJXbFkyYjFaSE9FbHBSM2h1VWtWdVNHWkpjVnBoWkc1UVlRcEtWRUZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJZMDlXT1VwalQweHdRM2t2UXpVNWVUWjBRME5sV2toQlpVSm5NRmhOUjI1cmNEQmxDbll6ZGxWcGMwNVZSM2xwUlhGSFRFWnJSbVZ6Vld4WkwycENhR2xvTURSSmRVNVdibWsxUWxoR2JrMXlPQzlNZEdKVmREVXpjMmhoSzBkSmFWTnBNMWNLYTAxMGRXTXpMMmxzUWsxRFZuTnlSV0p3U0hsWVZqTlpWMWhUVjNOcWVUUk5PRUUzT0dWdVZEUnlMekIzYW1sV2FFZE1kR0Z2ZWxOTWVDOXphVGxLT0FweFVUbE1NSEZ3UlcxaFRtdEdXblJwZVRoTWQwSXlWRTFSTnpCaE1sSmFNRW9yUkRkbWNWUlZOVFJWWVZWMU4yZHpVRmxCYzFkbFdEWkZWa3A0YUVSdkNqVllUa1U1TkVkdk5FeFVja1E1U1hReFdIUXdZMmRIVTBFd1JsSkJiVE5vVlVGTlpXYzFRMUJrUzIxU2NHSm9lbGxaVm1oYU5UQklMemN4WkROMGVHY0tTamRVY214RGNrMU5ZVEpvWm1GNmNXZzRUREZGVERST055OXJlVVp0ZGpCSVkzQlRLMnhXY0RackszZEJXR2t3V25jOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0VGSlFrRkJTME5CVVVWQmQxZHVkalZoVVdwelJXZE1OREZZVWpjM1VGUTFXRzFIUzBwMFUydEVjRTUzZEVaNVFVVm1ORzloVkRacWJFbzJDamhHUjJkQ1NGRk5ZVUpQTTNGMU9FWnRRbmNyWkRCNU1FSnViRGhTUTJGV2FWVkdlQzlFT1d4eFV6SXZPRGRvV0hOV1YwcG9jbUV2TTJ0a2JFbHJUaThLUkZsaVVFWTVPVUZ5Y0hKRWIycEpUMlpJWW1KaFIzUlJPRzFrSzBKTWNHMTFLeTg0VFZrclpVOXFkRUZYU0ROQ05uQnpSVXR4U0doclFXMUxOa2x4Wndwb01UWjZVV0l3VEVGelVEUmhiSFJLTTFWbWRHTldaSGhOWWxWMFptWlBlbFZDYlVGeGFqaGhRMUV3Wm1ZNU5XSXlSak5JVXpNMlFVUjBaa1oxV1hsNkNtRXdOWGhuVlZkS04xRlJPV1ZqUWtVMFMwbDRZMXB1TjNOV05UbGtaMDVKVmxvNFVHSnZiRWR6TkdGcGEwRlBTeXN4WnpSd01YcE1hRzk2UzBFelVHa0tTM1JTTWxaM1FTOXlkbUpSZFZCUFptOTRjSEp1TURSU2MxQnhWSFZGT0ZSYU9HTkZUWGRKUkVGUlFVSkJiMGxDUVZGRFoyNHpVRVpEUlRGRVNtNUpTUW81T0hGRVFVcHhiVFZuWkU5VVlpdENWelJ2WTJ0dlpsVlNMMFJ3WmxCTkwyOXhka3RVUmpsU2F6TmhRMDFITTBadVVEZFBWbWhhYVZOUFluZDNXVGczQ205aVpIQTFNVzVqU0VkSk1qTXpSMkl5Tm0xdU9HUjBiV0oyY0d0b1NFbDFlRVpOVGxSeWJFcHVMMUU1YWxCWFVFTXpZMUZWYW5wblQwMDVaVzlEWmprS2ExUmxhMDlEWWl0dFkwUlVjREJXUjNWQ2JVVXhablprTURsYVdrbE5RbXRWY2s5bE5uaDJkeTkxU1VoVlNuRTVOWGxwYzNKV2VGTktUVGd2VFhSTVJncDFVVVJEZDJSeVpIUkhUMGhVWTNKc2NUVmlSVVZwYlVvemFETXlRVzF1Umt0dFFVYzFaMEpUUmxFNFJWRlBWakVyTkRWQkszb3pOSEZvT0M5VlJtUjRDa1IwTHpkMlFucDZPRkpFV21kU2NucGhiM0IyUldrdk0zVm5NSEpITjJRclExbDFRVzFVYVdsb2ExZG5WRGx1V1dkcWNVcHFSR2xGY0cxT1ZIa3JVVU1LYUdkSlVXSlRhWGhCYjBkQ1FVMXdhRWN5T1VWclREbElkVlZCT1dZeU1FOHdRek41UlRrdlJEY3pka296VTNsV05uRk1VRUZyVDFRelJGTnBkMjVHVUFwVmJXOVRkR1ZsZDBFeWJqVmFUekUxYTNwVlNXdFJlVVp5TkZReVVVUnlhV2gwUzNORGJEVk9SeXRtYTFVd2VWZEtZemc0V1dSc1UzVTJRV1IzUTFKcENsUldOMHhCYjFoR2RTOU9USGgyU2xsMGNVRmxSME0wTWtWUmRFUXlSMGROVHpsaVRsRjJOSEZTVDBsWU1qSTFUREZWVVhoa01rdElRVzlIUWtGUVUyOEtkVXhZYVRkQ1UxcDJTMmwwWm1oMGRqSnhibWxrY25scE1XZzNabU52ZGxwWk5uaExURmh4Y2xwRWVFeDRSRkJqU3paellrNWxUWFZzV0d3eVMySnJZUXAxZDA5M2NUSlRSRVZ2Ymtvd09YQjVTR2R4YjA5R01XWnNjV2w0VWtKbFNYVTRabU16TUdzd1oySnBVRkp1UW1scmN6RlFSbGswWWpGNVQyZ3ZjRGd3Q25BMFZXUkVZalIxWjFSMWNrd3hTRkZIYkRSdFFtOWxTMGRFUkU1TFF6SlhWMUJVWW5CaUx6RkJiMGRDUVVwcVVqSjZWMkZSVUUxMk5XVk9jMnBPZURrS1dYaGFUM2hzVFdsVllWUlpUMloxUVN0VU1GaDBSVE42VTFWVk1UUnFOVTQ1TlROQ2IzcHlaek55VFZoaUt6aHBOM1JaVGsxbWNWTjFTV1JsY2tGSVRBcE1TMUJKTldOMGRucHlTemcxTW01a2REUTVWblZWTW5nck5YaGpNbk54WlhOSE16QlFiVTVzWmxKbGNrVlFMMUJ1V21keVNWaGtSSFpJYzFaTlJDODBDamxRWVhVMlVHVnJWVE1yYmtwRWRWWmFLMWR0ZEUwdmFFRnZSMEZtZFhoVmRuTTVWbUZETmtaaFFVSjRWSEY1VG1oT2NXVm1TMmRDWVhkNlEzTlFhRGNLVFM5T1ltVnhjMVp0WnpRMFdVTnpWbGxJVVVOV1lsSnBRMUozWVRoNFQwSTVOVEJqYmxVd0sxQmpjemx2TjB4WFJWQk9TMGx0Tm01cGVWcEVVeXMwT0Fwa1MyZExSV3RGZVVaMGQwWlVLMHBxYUVNeFJqUnROV2hCZGxKVlZYRlhVRlJ2YUZCRE9USXlXRFF3YTFKRk5IZHFOakJ6WWk4MVpFcEdkMkZRZFZGcUNtcEJkWHBDYXpCRFoxbENjMEpMTlRSbVVtTmxVRGhtTjFSUFUwaFpUM2xpZVRaRE56RXdjSHBVVFRsNGIyMUpiVWR6Vm1aNmJsRXhObGt6WjI1VFJYWUtTRFl5UW5GUGRWVkRhalJaUzBaWk5YaFJTRmx2VDJOa1JqQlRObkJ1YjI1RE1XRllWVVpxVDJOWldIZEJibkZzUlRGamFVMVlkR0pwUmtkeU5WbHBNUW9yZFdoMU5YUk1jRWxLZVcxRFVXRjJhV3h2WVZwTkswaFhXbkZTVEhKNEswdHJUa3REZUdoM1lqRk5Sa3hCWjBJemNFVnhTMUU5UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K": open YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VNdmFrTkRRV1ZoWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkpNRTFFYTNkTmVrRXlUV3BSZUU1R2IxaEVWRTB3VFVScmQwMVVRVEpOYWxGNFRrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCUzAxUENtNWhRakY0ZGtKWlYwWk9WbGxSWVZOMFpFSjVZWFJQZFdWUWN6VlRSbXRGY2t0V05uVk9SRXR1UlU1T2JEZHFiVWxqTW5VMmFrMHlMelpVVGpCcFEyNEtLMnBNV0hFMGNHRmhRVlZwU0ZCM2NsVllUMlZEVDNKM1ltdDVhbnBFVUhGUk9VbHpTRVo1VmtGR2JuZ3pXSEZLU0VaU2FtSnVaaTk2ZG5aNlFsaDVUZ3BGVUVaVmRsRjFMM1JJY3pVM2JVZDVhMGQxUm1GYU0wWTFPWGRoYVdKelIwVk9kbVZpV1dGR1NWcFphMll5VkRkUWRWQjFMMnhyTjFFNFZFeEVZbXBVQ25Oek5rZDBTa1EzZEhJNFdERnphVGxMY0hWVlNUaEJja3hGUTJkcFFrNHdaalJPV0VJeU1WcFZWWGxoVjNsd00yOW1LMWhKVFVGYVkyOW5ZbEVyUjI4S05sRlNUWGRGZEhWeVl6aHVVSFYwUTBRM2FDdElNSGM0V2pGbVNVVTJjV0ZaTm5VeFVHMUNSRXRZU0hGTlZuVndTbHAzV0VoRVVIWkdjbGxwY0RWMmRBcHdkSEo0VEVoS0wxWmtUVFpFZG1RdmNXOUZRMEYzUlVGQllVNWFUVVpqZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBoUldVUldVakJQUWtKWlJVWkNiRmh4YUZWaWQybEpZa2RrUlZOalpEaHBjR3h3TW1NNWIyeE5RbFZIUVRGVlpFVlJVVThLVFVGNVEwTnRkREZaYlZaNVltMVdNRnBZVFhkRVVWbEtTMjlhU1doMlkwNUJVVVZNUWxGQlJHZG5SVUpCUlhGNWVVUTNNMDAwYmxsME4zSkZTa0p0VWdwc1dFMWFkVzFwWldFM2QycHpUV2RZTlZsb1MwVnlUa3Q0YmpKeVpqWXpXVU5oVkVKdmJUUm5Xa2hXZGxKU016bEJkMnBSUjJwMU4yTkVTRVp4YVROd0NqRXhiamhRVUdWbmVFTlZZMWczZEVKbmFuQmhPSFp6VVdKWUsybFJRVFpsTUhaWFRqTTFUalZKVGpGa2RuQjRXWFozVDBKQ2RubElWa1UzVm01eVdtd0tSSE16UTBOdmFITkNXRXRzTUZVMlIwUnRVMmRFYVdsUk9FaDNTazl6TXpNdmRuVmlUbEpJZWpOWGR6SkJXbFZUVEZOUFFXdHlVWFV2V2tnd09VZ3hSd28yWm0xeFRsSmxNVTVPVkcxWEwwcEhVVFppTkd4cWNrUXpiblJtY0ZGT1RXRlFVRmN3WVhoeFVsYzFNSGs0Wms4MVNVbFhRemxDZWl0ellXUTRNVzVUQ2pRck5YQk9kVTFYTmxkcVowZDBWV05JVERBemJGQlljV1JrTms1RlZDdFdSeTlUWTJKVWFIUnBhalY0T1hSUVMwSlFhMGRXS3pSQlZXdHZWbVpwU0VvS1lXUkZQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgICBzZXJ2ZXI6IGh0dHBzOi8vMTkyLjE2OC4yMjcuMTYxOjY0NDMKICBuYW1lOiBjbHVzdGVyLmxvY2FsCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBjbHVzdGVyLmxvY2FsCiAgICB1c2VyOiBrdWJlcm5ldGVzLWFkbWluCiAgbmFtZToga3ViZXJuZXRlcy1hZG1pbkBjbHVzdGVyLmxvY2FsCmN1cnJlbnQtY29udGV4dDoga3ViZXJuZXRlcy1hZG1pbkBjbHVzdGVyLmxvY2FsCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZXJuZXRlcy1hZG1pbgogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUkpWRU5EUVdkdFowRjNTVUpCWjBsSldqWlpNR2h2WkVNMWVHTjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRHVkVWVVRVSkZSMEV4VlVVS1FYaE5TMkV6Vm1sYVdFcDFXbGhTYkdONlFXVkdkekI1VGtSQk5VMUVUWGRPYWtrd1RWUlNZVVozTUhsT1ZFRTFUVVJOZDA1cVNUQk5WRlpoVFVSUmVBcEdla0ZXUW1kT1ZrSkJiMVJFYms0MVl6TlNiR0pVY0hSWldFNHdXbGhLZWsxU2EzZEdkMWxFVmxGUlJFVjRRbkprVjBwc1kyMDFiR1JIVm5wTVYwWnJDbUpYYkhWTlNVbENTV3BCVGtKbmEzRm9hMmxIT1hjd1FrRlJSVVpCUVU5RFFWRTRRVTFKU1VKRFowdERRVkZGUVhkWGJuWTFZVkZxYzBWblREUXhXRklLTnpkUVZEVlliVWRMU25SVGEwUndUbmQwUm5sQlJXWTBiMkZVTm1wc1NqWTRSa2RuUWtoUlRXRkNUek54ZFRoR2JVSjNLMlF3ZVRCQ2JtdzRVa05oVmdwcFZVWjRMMFE1YkhGVE1pODROMmhZYzFaWFNtaHlZUzh6YTJSc1NXdE9MMFJaWWxCR09UbEJjbkJ5Ukc5cVNVOW1TR0ppWVVkMFVUaHRaQ3RDVEhCdENuVXJMemhOV1N0bFQycDBRVmRJTTBJMmNITkZTM0ZJYUd0QmJVczJTWEZuYURFMmVsRmlNRXhCYzFBMFlXeDBTak5WWm5SalZtUjRUV0pWZEdabVQzb0tWVUp0UVhGcU9HRkRVVEJtWmprMVlqSkdNMGhUTXpaQlJIUm1SblZaZVhwaE1EVjRaMVZYU2pkUlVUbGxZMEpGTkV0SmVHTmFiamR6VmpVNVpHZE9TUXBXV2poUVltOXNSM00wWVdsclFVOUxLekZuTkhBeGVreG9iM3BMUVROUWFVdDBVakpXZDBFdmNuWmlVWFZRVDJadmVIQnliakEwVW5OUWNWUjFSVGhVQ2xvNFkwVk5kMGxFUVZGQlFtOHhXWGRXUkVGUFFtZE9Wa2hST0VKQlpqaEZRa0ZOUTBKaFFYZEZkMWxFVmxJd2JFSkJkM2REWjFsSlMzZFpRa0pSVlVnS1FYZEpkMFJCV1VSV1VqQlVRVkZJTDBKQlNYZEJSRUZtUW1kT1ZraFRUVVZIUkVGWFowSlJXbFkyYjFaSE9FbHBSM2h1VWtWdVNHWkpjVnBoWkc1UVlRcEtWRUZPUW1kcmNXaHJhVWM1ZHpCQ1FWRnpSa0ZCVDBOQlVVVkJZMDlXT1VwalQweHdRM2t2UXpVNWVUWjBRME5sV2toQlpVSm5NRmhOUjI1cmNEQmxDbll6ZGxWcGMwNVZSM2xwUlhGSFRFWnJSbVZ6Vld4WkwycENhR2xvTURSSmRVNVdibWsxUWxoR2JrMXlPQzlNZEdKVmREVXpjMmhoSzBkSmFWTnBNMWNLYTAxMGRXTXpMMmxzUWsxRFZuTnlSV0p3U0hsWVZqTlpWMWhUVjNOcWVUUk5PRUUzT0dWdVZEUnlMekIzYW1sV2FFZE1kR0Z2ZWxOTWVDOXphVGxLT0FweFVUbE1NSEZ3UlcxaFRtdEdXblJwZVRoTWQwSXlWRTFSTnpCaE1sSmFNRW9yUkRkbWNWUlZOVFJWWVZWMU4yZHpVRmxCYzFkbFdEWkZWa3A0YUVSdkNqVllUa1U1TkVkdk5FeFVja1E1U1hReFdIUXdZMmRIVTBFd1JsSkJiVE5vVlVGTlpXYzFRMUJrUzIxU2NHSm9lbGxaVm1oYU5UQklMemN4WkROMGVHY0tTamRVY214RGNrMU5ZVEpvWm1GNmNXZzRUREZGVERST055OXJlVVp0ZGpCSVkzQlRLMnhXY0RackszZEJXR2t3V25jOVBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0KICAgIGNsaWVudC1rZXktZGF0YTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGY0VGSlFrRkJTME5CVVVWQmQxZHVkalZoVVdwelJXZE1OREZZVWpjM1VGUTFXRzFIUzBwMFUydEVjRTUzZEVaNVFVVm1ORzloVkRacWJFbzJDamhHUjJkQ1NGRk5ZVUpQTTNGMU9FWnRRbmNyWkRCNU1FSnViRGhTUTJGV2FWVkdlQzlFT1d4eFV6SXZPRGRvV0hOV1YwcG9jbUV2TTJ0a2JFbHJUaThLUkZsaVVFWTVPVUZ5Y0hKRWIycEpUMlpJWW1KaFIzUlJPRzFrSzBKTWNHMTFLeTg0VFZrclpVOXFkRUZYU0ROQ05uQnpSVXR4U0doclFXMUxOa2x4Wndwb01UWjZVV0l3VEVGelVEUmhiSFJLTTFWbWRHTldaSGhOWWxWMFptWlBlbFZDYlVGeGFqaGhRMUV3Wm1ZNU5XSXlSak5JVXpNMlFVUjBaa1oxV1hsNkNtRXdOWGhuVlZkS04xRlJPV1ZqUWtVMFMwbDRZMXB1TjNOV05UbGtaMDVKVmxvNFVHSnZiRWR6TkdGcGEwRlBTeXN4WnpSd01YcE1hRzk2UzBFelVHa0tTM1JTTWxaM1FTOXlkbUpSZFZCUFptOTRjSEp1TURSU2MxQnhWSFZGT0ZSYU9HTkZUWGRKUkVGUlFVSkJiMGxDUVZGRFoyNHpVRVpEUlRGRVNtNUpTUW81T0hGRVFVcHhiVFZuWkU5VVlpdENWelJ2WTJ0dlpsVlNMMFJ3WmxCTkwyOXhka3RVUmpsU2F6TmhRMDFITTBadVVEZFBWbWhhYVZOUFluZDNXVGczQ205aVpIQTFNVzVqU0VkSk1qTXpSMkl5Tm0xdU9HUjBiV0oyY0d0b1NFbDFlRVpOVGxSeWJFcHVMMUU1YWxCWFVFTXpZMUZWYW5wblQwMDVaVzlEWmprS2ExUmxhMDlEWWl0dFkwUlVjREJXUjNWQ2JVVXhablprTURsYVdrbE5RbXRWY2s5bE5uaDJkeTkxU1VoVlNuRTVOWGxwYzNKV2VGTktUVGd2VFhSTVJncDFVVVJEZDJSeVpIUkhUMGhVWTNKc2NUVmlSVVZwYlVvemFETXlRVzF1Umt0dFFVYzFaMEpUUmxFNFJWRlBWakVyTkRWQkszb3pOSEZvT0M5VlJtUjRDa1IwTHpkMlFucDZPRkpFV21kU2NucGhiM0IyUldrdk0zVm5NSEpITjJRclExbDFRVzFVYVdsb2ExZG5WRGx1V1dkcWNVcHFSR2xGY0cxT1ZIa3JVVU1LYUdkSlVXSlRhWGhCYjBkQ1FVMXdhRWN5T1VWclREbElkVlZCT1dZeU1FOHdRek41UlRrdlJEY3pka296VTNsV05uRk1VRUZyVDFRelJGTnBkMjVHVUFwVmJXOVRkR1ZsZDBFeWJqVmFUekUxYTNwVlNXdFJlVVp5TkZReVVVUnlhV2gwUzNORGJEVk9SeXRtYTFVd2VWZEtZemc0V1dSc1UzVTJRV1IzUTFKcENsUldOMHhCYjFoR2RTOU9USGgyU2xsMGNVRmxSME0wTWtWUmRFUXlSMGROVHpsaVRsRjJOSEZTVDBsWU1qSTFUREZWVVhoa01rdElRVzlIUWtGUVUyOEtkVXhZYVRkQ1UxcDJTMmwwWm1oMGRqSnhibWxrY25scE1XZzNabU52ZGxwWk5uaExURmh4Y2xwRWVFeDRSRkJqU3paellrNWxUWFZzV0d3eVMySnJZUXAxZDA5M2NUSlRSRVZ2Ymtvd09YQjVTR2R4YjA5R01XWnNjV2w0VWtKbFNYVTRabU16TUdzd1oySnBVRkp1UW1scmN6RlFSbGswWWpGNVQyZ3ZjRGd3Q25BMFZXUkVZalIxWjFSMWNrd3hTRkZIYkRSdFFtOWxTMGRFUkU1TFF6SlhWMUJVWW5CaUx6RkJiMGRDUVVwcVVqSjZWMkZSVUUxMk5XVk9jMnBPZURrS1dYaGFUM2hzVFdsVllWUlpUMloxUVN0VU1GaDBSVE42VTFWVk1UUnFOVTQ1TlROQ2IzcHlaek55VFZoaUt6aHBOM1JaVGsxbWNWTjFTV1JsY2tGSVRBcE1TMUJKTldOMGRucHlTemcxTW01a2REUTVWblZWTW5nck5YaGpNbk54WlhOSE16QlFiVTVzWmxKbGNrVlFMMUJ1V21keVNWaGtSSFpJYzFaTlJDODBDamxRWVhVMlVHVnJWVE1yYmtwRWRWWmFLMWR0ZEUwdmFFRnZSMEZtZFhoVmRuTTVWbUZETmtaaFFVSjRWSEY1VG1oT2NXVm1TMmRDWVhkNlEzTlFhRGNLVFM5T1ltVnhjMVp0WnpRMFdVTnpWbGxJVVVOV1lsSnBRMUozWVRoNFQwSTVOVEJqYmxVd0sxQmpjemx2TjB4WFJWQk9TMGx0Tm01cGVWcEVVeXMwT0Fwa1MyZExSV3RGZVVaMGQwWlVLMHBxYUVNeFJqUnROV2hCZGxKVlZYRlhVRlJ2YUZCRE9USXlXRFF3YTFKRk5IZHFOakJ6WWk4MVpFcEdkMkZRZFZGcUNtcEJkWHBDYXpCRFoxbENjMEpMTlRSbVVtTmxVRGhtTjFSUFUwaFpUM2xpZVRaRE56RXdjSHBVVFRsNGIyMUpiVWR6Vm1aNmJsRXhObGt6WjI1VFJYWUtTRFl5UW5GUGRWVkRhalJaUzBaWk5YaFJTRmx2VDJOa1JqQlRObkJ1YjI1RE1XRllWVVpxVDJOWldIZEJibkZzUlRGamFVMVlkR0pwUmtkeU5WbHBNUW9yZFdoMU5YUk1jRWxLZVcxRFVXRjJhV3h2WVZwTkswaFhXbkZTVEhKNEswdHJUa3REZUdoM1lqRk5Sa3hCWjBJemNFVnhTMUU5UFFvdExTMHRMVVZPUkNCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRbz0K: The filename, directory name, or volume label syntax is incorrect.
[0m[32m[2024-09-03 16:23:14] INFO [Recovery] 2024/09/03 - 16:23:14 panic recovered:
runtime error: invalid memory address or nil pointer dereference
C:/Users/Administrator/gomod/pkg/mod/github.com/gin-gonic/gin@v1.9.1/gin.go:620 (0x2cbeb29)
	(*Engine).handleHTTPRequest: c.writermem.WriteHeaderNow()
C:/Users/Administrator/gomod/pkg/mod/github.com/gin-gonic/gin@v1.9.1/gin.go:576 (0x2cbe5fb)
	(*Engine).ServeHTTP: 
C:/Program Files/Go/src/net/http/server.go:3210 (0x1190c16)
	serverHandler.ServeHTTP: }
C:/Program Files/Go/src/net/http/server.go:2092 (0x115efb4)
	(*conn).serve: inFlightResponse = nil
C:/Program Files/Go/src/runtime/asm_amd64.s:1700 (0xc4ece0)
	goexit: CALL	runtimeÂ·goexit1(SB)	// does not return
[0m
[0m