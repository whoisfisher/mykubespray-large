#! /bin/bash
ARCH="amd64"
if [ "$(arch)" == "x86_64" ]; then
  ARCH="amd64"
elif [ "$(arch)" == "aarch64" ]; then
  ARCH="arm64"
fi
MULTI_ARCH="amd64 arm64"
KUBESPRAY_VERSION=2.25.0
KUBESPRAY_TARBALL=kubespray-$KUBESPRAY_VERSION.tar.gz
KUBESPRAY_CACHE="$(cd $(dirname $0); pwd)/.cache"
KUBESPRAY_DIR="$(cd $(dirname $0); pwd)/.tmp"
KUBESPRAY_OFFLINE_SCRIPT_PATH=$KUBESPRAY_CACHE/kubespray-$KUBESPRAY_VERSION/contrib/offline
MANAGE_OFFLINE_CONTAINER_IMAGES=$KUBESPRAY_OFFLINE_SCRIPT_PATH/manage-offline-container-images.sh
MANAGE_OFFLINE_FILES=$KUBESPRAY_OFFLINE_SCRIPT_PATH/manage-offline-files.sh
GENERATE_LIST=$KUBESPRAY_OFFLINE_SCRIPT_PATH/generate_list.sh
OFFLINE_FILE_OUTPUT_PATH=$KUBESPRAY_OFFLINE_SCRIPT_PATH/temp
IMAGE_LIST=$OFFLINE_FILE_OUTPUT_PATH/images.list
FILE_LIST=$OFFLINE_FILE_OUTPUT_PATH/files.list
IMAGES_OUTPUT="$(cd $(dirname $0); pwd)/.cache/images"
FILES_OUTPUT="$(cd $(dirname $0); pwd)/.cache/files"
REPO_OUTPUT="$(cd $(dirname $0); pwd)/.cache/repos/"
REGISTRY_IMAGE="registry:latest"
REGISTRY_PORT=5000
REGISTRY_NAME="registry"
FILE_SERVER_IMAGE="nginx:proxy"
FILE_SERVER_PORT="8000"
FILE_SERVER_NAME="file-server"
KUBESPRAY_IMAGE="kubespray"
KUBESPRAY_NAME="kubespray"
DOCKER_VERSION="26.1.4"
DOCKER_TAR="docker.tgz"
DOCKER_URL="https://download.docker.com/linux/static/stable/$(arch)/docker-${DOCKER_VERSION}.tgz"
DOCKER_HTTP_PROXY="http://172.30.1.98:10809"
DOCKER_HTTPS_PROXY="http://172.30.1.98:10809"
DOCKER_NO_PROXY="localhost,127.0.0.1,127.0.0.1:5000"
